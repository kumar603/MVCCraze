using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace MVCraze.Filters
{
    /*****************************************************************************************************
         Writer       : Kiran Kumar J
         Description  : Logging for both controllers
         Created Date : 29 - July - 2025
         Created By   : Kiran Kumar
         Changed Date : 29 - July - 2025
         Changed By   : Kiran Kumar
         JIRA ID      : https://kiranjuvvanapudi.atlassian.net/browse/AMAECR-5
   *****************************************************************************************************/
    /*
     * Important keywords or logic statements
     * ActionFilterAttribute - Validates if the form submitted matches the criteria of model data annotations
     * OnActionExecuting method -  The OnActionExecuting method in ASP.NET MVC action filters is executed before a 
     *                              controller action method runs. It allows you to perform logic or checks—such as logging, 
     *                              authentication, validation, or modifying the action parameters—prior to the
     *                              actual execution of the action method
     * ActionExecutingContext -  The ActionExecutingContext class is a context object in ASP.NET MVC and ASP.NET Core MVC
     *                           that is passed to action filters, specifically to the OnActionExecuting method. 
     *                           It provides detailed information about the current request and the state 
     *                           of the controller/action before the action method executes
     *                           
     * OnActionExecuted - The OnActionExecuted method in ASP.NET MVC and ASP.NET Core MVC action filters is executed 
     *                      immediately after a controller action method runs, but before the result 
     *                      (view, JSON, redirect, etc.) is executed. This allows you to perform post-processing or handle
     *                       any results or exceptions generated by the action
     * ActionExecutedContext - ActionExecutedContext is a context object used in ASP.NET MVC and ASP.NET Core MVC for action filters, 
     *                          specifically passed to the OnActionExecuted method. It provides detailed information about the action just executed,
     *                          its result, and any exceptions that occurred during execution.
     */
    public class LogActionFilter : ActionFilterAttribute
    {
        public override void OnActionExecuting(ActionExecutingContext filterContext)
        {
            Debug.WriteLine($"[LOG] Starting: {filterContext.ActionDescriptor.ControllerDescriptor.ControllerName}/{filterContext.ActionDescriptor.ActionName}");
        }
        public override void OnActionExecuted(ActionExecutedContext filterContext)
        {
            Debug.WriteLine($"[LOG] Completed: {filterContext.ActionDescriptor.ControllerDescriptor.ControllerName}/{filterContext.ActionDescriptor.ActionName}");
        }
    }
}