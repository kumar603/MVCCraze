@*
    /*****************************************************************************************************
          Writer       : Kiran Kumar J
          Description  : View where user enters the registration details and submits the form to controller and models
          Created Date : 29 - July - 2025
          Created By   : Kiran Kumar
          Changed Date : 29 - July - 2025
          Changed By   : Kiran Kumar
          JIRA ID      : https://kiranjuvvanapudi.atlassian.net/browse/AMAECR-4
    *****************************************************************************************************/
    /*
     * Important keywords or logic statements

    * @model Student - It contains the Student model and its fields

    * Html.BeginForm() - "BeginForm()" is an extension method that writes an opening "<form>" tag

    *  @Html.AntiForgeryToken() - @Html.AntiForgeryToken() is an ASP.NET MVC helper method that generates a hidden
                                    form field containing an anti-forgery token.
                                     This token is a crucial component in mitigating Cross-Site Request Forgery (CSRF) attacks.

     * @Html.ValidationSummary() - It is an ASP.NET MVC HTML Helper method used to display a summary of all validation errors
                                  that are present in the ModelStateDictionary object.

    * @Html.LabelFor -  is an ASP.NET MVC HTML Helper method used in Razor views to generate
                        an HTML <label> element for a specific property of a model object.

    * @Html.EditorFor - is an ASP.NET MVC HTML Helper method used in Razor views to generate HTML input
                        elements based on the data type of a model property. It is strongly typed,
                        meaning it uses lambda expressions to specify the model property it should generate an editor for.

    * @Html.ValidationMessageFor - is an ASP.NET MVC HTML helper method used to display validation error messages associated
                        with a specific model property. It is a strongly-typed helper, meaning it directly binds to a property of your model,
                        enabling compile-time checking and improved readability.

    */
*@

@model MVCraze.Models.Student



<!-- Views/Students/Register.cshtml -->
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Register";
}

<h2>Student Registration</h2>
@* Form code can go here *@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
